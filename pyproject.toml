[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "proyecto-j"
version = "1.0.0"
description = "Sistema Integral de AnÃ¡lisis de Datos para Ciencias Sociales"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Proyecto J Team", email = "contact@proyecto-j.com"}
]
keywords = ["data-analysis", "social-sciences", "statistics", "streamlit"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "streamlit>=1.28.0",
    "scipy>=1.10.0",
    "scikit-learn>=1.3.0",
    "plotly>=5.15.0",
    "matplotlib>=3.7.0",
    "wordcloud>=1.9.0",
    "chardet>=5.0.0",
    "openpyxl>=3.1.0",
    "pyreadstat>=1.2.0",
    "pyyaml>=6.0",
    "python-dateutil>=2.8.0",
    "statsmodels>=0.14.0",
    "missingno>=0.5.0",
    "fpdf2>=2.7.0",
    "fuzzywuzzy>=0.18.0",
    "python-Levenshtein>=0.21.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "flake8>=6.0.0",
    "black>=23.0.0",
    "pytest-mock>=3.11.0",
]

[project.urls]
Homepage = "https://github.com/tu_usuario/proyecto_j"
Repository = "https://github.com/tu_usuario/proyecto_j"
Documentation = "https://github.com/tu_usuario/proyecto_j#readme"
Issues = "https://github.com/tu_usuario/proyecto_j/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["proyecto_j*", "processing*", "orchestrator*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=proyecto_j",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["proyecto_j", "processing", "orchestrator"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/\.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 